import asyncio
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, LabeledPrice
from config import *
import random
import string


def recept():
    receipt = {
        "items": [
            {
                "description": "–ü–æ–∫—É–ø–∫–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                "quantity": "1",
                "amount": {"value": "100.00", "currency": "RUB"},
                "vat_code": 1
            }
        ]
        # "customer": {"email": "perep@24perep.ru"}
    }

    provider_data = {
        "receipt": receipt
    }
    return provider_data


main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
my_vpn_button = KeyboardButton(text='üîê –ú–æ–π VPN')
tarif_button = KeyboardButton(text='üí∏ –¢–∞—Ä–∏—Ñ—ã')
support_button = KeyboardButton(text='ü§Ø –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
main_menu.add(my_vpn_button, tarif_button, support_button)


pre_pay_keyboard = InlineKeyboardMarkup(row_width=1)  # –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ row_width
connect_pay_button1 = InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∞', callback_data='pre_pay')
connect_pay_button2 = InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')
pre_pay_keyboard.add(connect_pay_button1,connect_pay_button2)


connect_vpn = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='–ü–æ–¥–∫–ª—é—á–∏—Ç—å VPN ‚òïMicro: 50 GB', callback_data="pay")],
    ]
)

instrukt_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='‚öô –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN', callback_data="instrukt")],
        [InlineKeyboardButton(text='üí∏ –ü—Ä–æ–¥–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ', callback_data="Extend_tariff")]
    ]
)


def generate_password(length=15):
    characters = string.ascii_letters + string.digits  # –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã
    password = ''.join(random.choice(characters) for i in range(length))
    return password


async def pay_conf(chat_id):
    await bot.send_invoice(chat_id=chat_id,
                           title='VPN',
                           description='–ë–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä–æ—é—Ç—Å—è —Å–æ –≤—Å–µ–º–∏ '
                                       '–∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ –≤ –†–§ —Å–æ—Ü—Å–µ—Ç—è–º–∏',
                           payload='payment',
                           provider_token=TOKEN_UKASSA,
                           currency='RUB',
                           start_parameter='vpn_bot',
                           need_email=True,
                           send_email_to_provider=True,
                           photo_url='https://d1xsi6mgo67kia.cloudfront.net/uploads/2022/03/VPN.jpg',
                           provider_data=recept(),
                           prices=[
                               LabeledPrice(
                                   label='–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ VPN',
                                   amount=150_00
                               ),
                               LabeledPrice(
                                   label='–°–∫–∏–¥–∫–∞',
                                   amount=-50_00
                               )])


async def delayed_task(user_id):
    await asyncio.sleep(10)
    try:
        await bot.send_message(chat_id=user_id, text='–µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º,\n'
                                                     '–Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @f_o_x_y_s')
    except Exception as e:
        print(e)
