from functools import wraps
import logging
import asyncio
from aiogram.utils.exceptions import NetworkError, RetryAfter
from aiogram.utils.deep_linking import get_start_link
from config import dp, bot
from func import main_menu, connect_vpn, instrukt_kb, send_message_link
from func import delayed_task, send_message_mi
from func import send_to_all_users, send_video_from_file, check_args, device_kb, pay_inlane
from aiogram import types
from aiogram.types import ContentType
from database import is_test, count_refs, is_user_in_trojan
from database import update_users_db, read_to_db_end_date, is_user_in_db, write_to_db
from admin import get_system_info
from aiogram.types import ParseMode
from marzban import backend

logging.basicConfig(level=logging.INFO)
log = logging.getLogger(__name__)

admin = [1348491834]


def admin_only(func):
    @wraps(func)
    async def wrapper(message: types.Message, *args, **kwargs):
        if message.from_user.id in admin:
            return await func(message, *args, **kwargs)
        else:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–º–µ–Ω–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_name = message.from_user.username or "–ò–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
                forward_text = (
                    f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user_name} ID: {message.from_user.id}\n\n"
                    f"{message.text if message.text else '–ù–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'}"
                )

                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤–∞—à —á–∞—Ç
                if message.text:
                    await bot.send_message(chat_id=1348491834, text=forward_text)
                else:
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å
                    await bot.send_message(chat_id=1348491834, text=forward_text)
                    await message.forward(chat_id=1348491834)

            except Exception as e:
                await message.reply(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
                await bot.send_message(chat_id=1348491834, text=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {message.from_user.id}\n\n{str(e)}')

    return wrapper


@dp.errors_handler()
async def error_handler(update, exception):
    if isinstance(exception, NetworkError):
        logging.error(f"NetworkError: {exception}")
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        return True  # –û—Ç–º–µ—á–∞–µ–º –æ—à–∏–±–∫—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é

    elif isinstance(exception, RetryAfter):
        await asyncio.sleep(exception.timeout)
        return True  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

    else:
        logging.error(f'—Ö–∑ —á–µ –∑–∞ –æ—à–∏–±–∫–∞...{exception}')
        return True


@dp.message_handler(commands=['info'])
@admin_only
async def send_info(message: types.Message):
    system_info = await get_system_info()
    await message.answer(system_info, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['mess'])
@admin_only
async def send_mess_user(message: types.Message):
    args = message.get_args()

    try:
        # –†–∞–∑–¥–µ–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        user_id, text_message = args.split(' ', 1)

        # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∏—Å–ª–æ
        user_id = int(user_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_message(chat_id=user_id, text=text_message)
        await message.reply(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {user_id}.")
    except ValueError:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.")
    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {str(e)}")


@dp.message_handler(commands=['read'])
@admin_only
async def all_users(message: types.Message):
    text = message.get_args()
    await send_to_all_users(text)


# @dp.message_handler(content_types=types.ContentType.VIDEO)
# async def handle_video(message: types.Message):
#     video_id = message.video.file_id  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∏–¥–µ–æ
#     await bot.send_message(1348491834, f"ID –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: {video_id}")


@dp.message_handler(content_types=types.ContentType.VIDEO)
@admin_only
async def handle_video(message: types.Message):

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
    video = message.video  # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    video_id = message.video.file_id  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∏–¥–µ–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    caption = message.caption  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –≤–∏–¥–µ–æ
    await send_to_all_users(caption, video_id=video_id)



# Python
@dp.message_handler(content_types=types.ContentType.PHOTO)
@admin_only
async def handle_photo(message: types.Message):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç - –Ω–∞–∏–±–æ–ª—å—à–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ)
    photo = message.photo[-1]
    photo_id = photo.file_id  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–∞–π–ª–∞ —Ñ–æ—Ç–æ
    caption = message.caption  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ
    await send_to_all_users(caption, photo_id=photo_id)


@dp.message_handler(commands=['start'])
async def process_start_command(msg: types.Message):
    user_id = msg.from_user.id

    referal_args = msg.get_args()  # /start 123123
    check_referal_args = await check_args(referal_args, msg.from_user.id)

    user_is_tj = await is_user_in_db('trojan_users', user_id)

    if not user_is_tj:

        await write_to_db(user_id=user_id, table_name='trojan_users', refer=check_referal_args)

        try:
            if check_referal_args and check_referal_args != '0':

                await bot.send_message(chat_id=user_id, text='–í—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π')
                
                old_user_is_tj = await is_user_in_trojan(user_id=check_referal_args)

                if old_user_is_tj:
                    
                    await update_users_db(table_name='trojan_users', user_id=check_referal_args, days=15)
                    await bot.send_message(chat_id=check_referal_args,
                                           text='–ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å\n\n'
                                                '–í–∞–º –¥–æ–±–∞–≤–ª–µ–Ω–æ 15 –¥–Ω–µ–π\n\n'
                                                '–Ω–∞–∂–º–∏—Ç–µ –ú–æ–π VPN, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞\n\n'
                                                '–ù–∞–∂–∏–º–∞–π –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ')
                else:
                    # await send_quota(check_referal_args, quota=26843545600)

                    if not backend.get_user(check_referal_args):
                        link = backend.create_user(check_referal_args)
                        await send_message_link(check_referal_args, link['subscription_url'])

                    else:
                        backend.enable_user(check_referal_args)

                    if not await is_user_in_db(table_name='trojan_users', user_id=check_referal_args):
                        await write_to_db(table_name='trojan_users', user_id=check_referal_args, refer=None, is_vpn=1,
                                          days=15)
                    else:
                        await update_users_db(table_name='trojan_users', user_id=check_referal_args, days=15)

                    await bot.send_message(chat_id=check_referal_args,
                                           text='–ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å\n\n'
                                                '–í–∞–º –¥–æ–±–∞–≤–ª–µ–Ω–æ 15\n\n'
                                                '–Ω–∞–∂–º–∏—Ç–µ –ú–æ–π VPN, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞\n\n'
                                                '–ù–∞–∂–∏–º–∞–π –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ')


        except Exception as a:
            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∂–∞—Ç–∏—è start: {a}")

    if user_id:
        await bot.send_message(chat_id=msg.chat.id,
                               text=' @free_VIP_VPN_bot —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ! \n'
                                    ' –î–∞–∂–µ —Ç–∞–º, –≥–¥–µ VPN –±–ª–æ–∫–∏—Ä—É—é—Ç.\n\n'
                                    ' –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª WLESS,'
                                    ' –∫–æ—Ç–æ—Ä—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –º–∞—Å–∫–∏—Ä—É–µ—Ç —Ç—Ä–∞—Ñ–∏–∫ –ø–æ–¥ –æ–±—ã—á–Ω—ã–π –∏ —Å –ª–µ–≥–∫–æ—Å—Ç—å—é'
                                    ' –æ–±—Ö–æ–¥–∏—Ç –ª—é–±—ã–µ —Å–∏—Å—Ç–µ–º—ã –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞—Ñ–∏–∫–∞.')
        await bot.send_message(chat_id=msg.chat.id,
                               text=' üçÄ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—Å–µ –µ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞'
                                    ' —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ,\n\n'
                                    '–ù–∞–∂–º–∏—Ç–µ  <b>–ú–æ–π VPN</b> –∏–ª–∏ <b>–¢–∞—Ä–∏—Ñ—ã</b> –≤ –º–µ–Ω—é –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è '
                                    ' –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ ü¶û')
        await bot.send_message(chat_id=msg.chat.id,
                               text='<b>–ù–µ —Ö–æ—á–µ—à—å –ø–ª–∞—Ç–∏—Ç—å?\n'
                                    '–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏ 2 –Ω–µ–¥–µ–ª–∏ VPN –±–µ—Å–ø–ª–∞—Ç–Ω–æ</b> '
                                    '–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É')
        await msg.answer_sticker(sticker='CAACAgIAAxkBAAEBgo9lL7p4rfT_TOJ25HtBsN-EtQ22YQACTQADWbv8JSiBoG3dG4L3MAQ')
        await bot.send_message(chat_id=msg.chat.id,
                               text='–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ –ª—É—á—à–∏–π –≤ –º–∏—Ä–µ VPN!', reply_markup=main_menu)

    else:
        await bot.send_message(chat_id=msg.chat.id,
                               text='–í–∞–º –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º\n'
                                    '—Ç.–∫ –≤ –≤–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ—Ç user id')


@dp.message_handler(text='üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
async def referal(mess: types.Message):
    ref_link = await get_start_link(payload=mess.from_user.id)
    count = await count_refs(mess.from_user.id)
    await mess.answer(f'–£ —Ç–µ–±—è  —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {count}\n'
                      f'–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞\n'
                      f'–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ —á—Ç–æ –±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å\n\n'
                      f'<code>{ref_link}</code>\n\n',
                      reply_markup=main_menu)


@dp.message_handler(text='üí∏ –¢–∞—Ä–∏—Ñ—ã')
async def mess_replay(msg: types.Message):
    await bot.send_message(chat_id=msg.chat.id,
                           text='‚òï –¢–∞—Ä–∏—Ñ 30 –¥–Ω–µ–π VPN: 150—Ä\n\n'
                                'üçÑ –ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ \n'
                                '(–¥–æ—Å—Ç—É–ø–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\n\n',
                           reply_markup=connect_vpn)


@dp.message_handler(text='ü§Ø –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def mess_replay(msg: types.Message):
    await bot.send_message(chat_id=msg.chat.id,
                           text='–µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∏–ª–∏ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π,\n'
                                '–Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º @f_o_x_y_s,\n'
                                '—Ç–∞–∫ –∂–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–∞ '
                                '<a href="https://24perep.ru/">—ç—Ç–æ–º —Å–∞–π—Ç–µ</a>')


@dp.message_handler(text='üéØ –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN')
async def mess_replay(msg: types.Message):
    if await is_user_in_trojan(user_id=msg.from_user.id):
        await bot.send_message(chat_id=msg.chat.id,
                               text='–≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN\n\n'
                                    '–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VPN:',
                               reply_markup=device_kb)
    else:
        await bot.send_message(chat_id=msg.chat.id,
                               text='–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏\n\n'
                                    '–ù–∞–∂–º–∏—Ç–µ –¢–∞—Ä–∏—Ñ—ã –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ',
                               reply_markup=main_menu)


@dp.callback_query_handler(text="Android")
async def send_instruct_an(call: types.CallbackQuery):
    await call.answer()
    await bot.send_message(chat_id=call.from_user.id,
                           text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è v2rayNG (Android)\n\n'
                                '1Ô∏è‚É£ C–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á ‚¨Ü\n'
                                ' —Å—Å—ã–ª–∫–∞ –≤—ã—à–µ"\n'
                                '2Ô∏è‚É£ C–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '
                                '<a href="https://play.google.com/store/apps/details?id=com.v2ray.ang">'
                                ' v2rayNG </a>\n'
                                '3Ô∏è‚É£ C–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á',
                           reply_markup=main_menu,
                           disable_web_page_preview=True)
    await bot.send_video(call.message.chat.id, 
                         video="BAACAgIAAxkBAAIvH2bA3pSSY1cwFUMtbHq_nKIalsFGAAI-WQAC_EwJSq5j62W85yGJNQQ", 
                         caption='–í–æ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN')
    


@dp.callback_query_handler(text="Apple")
async def send_instruct_ap(call: types.CallbackQuery):
    await call.answer()
    await bot.send_message(chat_id=call.from_user.id,
                           text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Streisand (Apple)\n\n'
                                '1Ô∏è‚É£ C–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á ‚¨Ü \n'
                                '—Å—Å—ã–ª–∫–∞ –≤—ã—à–µ"\n'
                                '2Ô∏è‚É£ C–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '
                                '<a href="https://apps.apple.com/ru/app/streisand/id6450534064">'
                                ' Streisand </a>\n'
                                '3Ô∏è‚É£ C–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á',
                           reply_markup=main_menu,
                           disable_web_page_preview=True)
    await bot.send_video(call.message.chat.id, 
                         video="BAACAgIAAxkBAAIukmbAhl8a4BUUlxQb5DyHUIUPOEGrAAJxVAAC_EwJSgcI0cStgyJmNQQ", 
                         caption='–í–æ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN')
    


@dp.message_handler(text='üîê –ú–æ–π VPN')
async def get_data(msg: types.Message):

    trojan_is = await is_user_in_trojan(user_id=msg.from_user.id)

    # –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ —á–∞—Ç
    # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ result –Ω–µ –ø—É—Å—Ç–æ–π

    if trojan_is:

        date_do = await read_to_db_end_date(user_id=msg.from_user.id, table_name='trojan_users')
        if date_do is None or len(date_do) < 0:
            date_do = ['–¢—ã –∫–∞–∫–æ–π —Ç–æ —á–∏—Ç–µ—Ähhh',]

        await bot.send_message(chat_id=msg.chat.id,
                               text=f'üåü –í–∞—à —Ç–∞—Ä–∏—Ñ:\n'
                                    f'üü¢ –∞–∫—Ç–∏–≤–µ–Ω –¥–æ: {date_do[0]}\n\n'
                                    f'‚ö†Ô∏è–ü—Ä–æ–¥–ª–µ–≤–∞–π—Ç–µ —Ç–∞—Ä–∏—Ñ –∑–∞—Ä–∞–Ω–µ–µ, –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏ –î–û–ë–ê–í–Ø–¢–°–Ø, –Ω–µ —Å–≥–æ—Ä—è—Ç\n'
                                    f'–ü—Ä–æ–¥–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ: ',
                               reply_markup=instrukt_kb)


    else:

        await bot.send_message(chat_id=msg.chat.id,
                               text='–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫\n\n'
                                    '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å VPN –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏'
                                    'üëâ –ù–∞—à VPN —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ! –î–∞–∂–µ —Ç–∞–º, –≥–¥–µ VPN –±–ª–æ–∫–∏—Ä—É—é—Ç. '
                                    '–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª VLESS\n\n'
                                    '‚è≥ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∏ –æ—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞\n\n'
                                    '–∫—Ä–∞—Å–Ω–∞—è ü©∏ –∏–ª–∏ —Å–∏–Ω—è—è üíß??',
                               reply_markup=connect_vpn)


@dp.callback_query_handler(text='trial_tariff')
async def trial_tariff(call: types.CallbackQuery):
    await call.answer()
    data_test = await is_test(user_id=call.from_user.id, tale_name='trojan_users')
    data_VLESS = backend.get_user(call.from_user.id)

    if not data_test and not data_VLESS:
        if await is_user_in_db(table_name='trojan_users', user_id=call.from_user.id):
            await update_users_db(table_name='trojan_users', user_id=call.from_user.id, days=3, test=1)

        else:
            await write_to_db(user_id=call.from_user.id, is_vpn=1, table_name='trojan_users', refer=0, days=3, test=1)

        link = backend.create_user(call.from_user.id)

        if link is None:
            log.info(f'–ª–∏–Ω–∫: –¥–ª—è —é–∑–µ—Ä–∞ {call.message.chat.id} == None')
            await bot.send_message(call.message.chat.id, '–≤–æ–∑–Ω–Ω–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ—Ñ–∏–ª—è\n'
                                   '–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @f_o_x_y_s')
            await bot.send_message(chat_id='1348491834', text=f'–æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è {call.message.chat.id}')

        else:    
            await send_message_link(call.message.chat.id, link['subscription_url'])  

            await bot.send_message(chat_id=call.message.chat.id,
                                text='–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ 3 –¥–Ω—è VPN'
                                        ' –Ω–∞–∂–º–∏—Ç–µ –ú–æ–π VPN, —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞\n\n'
                                        '–ù–∞–∂–∏–º–∞–π –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ',
                                reply_markup=main_menu)
            await delayed_task(call.message.chat.id)
            await send_message_mi(user=call.from_user.id, text='–ø–æ–¥–∫–ª—é—á–∏–ª –ü—Ä–æ–±–Ω—ã–π VPN', name=call.from_user.username)

    else:

        await bot.send_message(chat_id=call.from_user.id,
                               text='ü•π –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
                               reply_markup=main_menu)


@dp.callback_query_handler(text="extend_tariff")
async def extend_tariff(call: types.CallbackQuery):
    await call.answer()

    data_VLESS = backend.get_user(call.from_user.id)

    if data_VLESS:
        await bot.send_message(chat_id=call.message.chat.id,
                               text='üé≤ –û—Ç–ª–∏—á–Ω–æ —á—Ç–æ –≤—ã –ø—Ä–æ–±—É–µ—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª, '
                                    '–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –º–µ—Å—è—Ü –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ ü•áWLESS',
                               reply_markup=connect_vpn)

    else:
        await bot.send_message(chat_id=call.message.chat.id,
                               text='ü¶û –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª WLESS, '
                                    '–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n\n',
                               reply_markup=connect_vpn)



@dp.callback_query_handler(text="instrukt")
async def cancellation(call: types.CallbackQuery):
    await call.answer()
    if await is_user_in_trojan(call.from_user.id):
        await bot.send_message(chat_id=call.message.chat.id,
                               text='–≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN\n\n'
                                    '–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VPN:',
                               reply_markup=device_kb)
    else:
        await bot.send_message(chat_id=call.message.chat.id,
                               text='–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏\n\n'
                                    '–ù–∞–∂–º–∏—Ç–µ –¢–∞—Ä–∏—Ñ—ã –∏ –≤—ã–±–µ—Ä–∏—Ç–µ VPN –∏–ª–∏ –ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ',
                               reply_markup=main_menu)


@dp.callback_query_handler(text="joy_trojan")
async def pay_message(call: types.CallbackQuery):
    await call.answer()
    user_name = f"@{call.from_user.username}" if call.from_user.username else None

    await bot.edit_message_text(chat_id=call.message.chat.id,
                            message_id=call.message.message_id,
                            text='‚òï VPN / 1 –º–µ—Å—è—Ü\n\n'
                                    '–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞ –ú–ï–°–Ø–¶: üëâ 150 —Ä—É–±–ª–µ–π\n'
                                    '‚Ñπ 5 —Ä—É–±. –≤ –¥–µ–Ω—å\n\n'
                                    '–•–æ—á–µ—à—å –∑–∞–ø–ª–∞—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤ –∏ –±–µ–≥—Ä–∞–Ω–∏—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º,\n'
                                    '–ù–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—â–µ—Ç–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π @f_o_x_y_s',
                                    reply_markup=pay_inlane(call.message.chat.id, user_name)
                            )


@dp.callback_query_handler(lambda c: c.data == 'back')
async def push_cancel(call: types.CallbackQuery):
    await call.answer()
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text='–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å, –º–Ω–µ <b>–æ—á–µ–Ω—å –∂–∞–ª—å</b>')

